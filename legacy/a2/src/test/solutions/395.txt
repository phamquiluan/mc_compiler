Program(List(FuncDecl(Id(main),List(),IntType,Block(List(VarDecl(Id(n),IntType),VarDecl(Id(i),IntType),VarDecl(Id(flag),IntType)),List(BinaryOp(=,Id(flag),IntLiteral(0)),CallExpr(Id(printf),List(StringLiteral(Enter a positive integer: ))),CallExpr(Id(scanf),List(StringLiteral(%d),Id(n))),For(BinaryOp(=,Id(i),IntLiteral(2)),BinaryOp(<=,Id(i),BinaryOp(/,Id(n),IntLiteral(2))),BinaryOp(=,Id(i),BinaryOp(+,Id(i),IntLiteral(1))),Block(List(),List(If(BinaryOp(==,BinaryOp(%,Id(n),Id(i)),IntLiteral(0)),Block(List(),List(BinaryOp(=,Id(flag),IntLiteral(1)),Break)),None)))),If(BinaryOp(==,Id(flag),IntLiteral(0)),CallExpr(Id(printf),List(StringLiteral(%d is a prime number.),Id(n))),Some(CallExpr(Id(printf),List(StringLiteral(%d is not a prime number.),Id(n))))),Return(Some(IntLiteral(0))))))))